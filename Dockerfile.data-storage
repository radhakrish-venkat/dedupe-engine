# Stage 1: Builder
FROM golang:1.23-alpine AS builder

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

# Generate Protobuf code (if needed by data-storage-node, otherwise remove)
RUN apk add --no-cache protobuf
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
ENV PATH="/go/bin:${PATH}"
RUN protoc --go_out=./pkg/api --go_opt=paths=source_relative \
           --go-grpc_out=./pkg/api --go-grpc_opt=paths=source_relative \
           pkg/api/dedupe_engine.proto

# Build the data-storage-node executable
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/data-storage-node ./cmd/data-storage-node

# Stage 2: Runner
FROM alpine:latest

WORKDIR /app

# Copy the compiled executable from the builder stage
COPY --from=builder /app/data-storage-node .

# Expose the gRPC port
EXPOSE 50052

# Command to run the application
ENTRYPOINT ["./data-storage-node"]
